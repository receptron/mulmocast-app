import { type AgentFunctionInfo, type AgentFunction } from "graphai";

const mulmoScriptAgent: AgentFunction = async () => {
  return {
    content: "Successfully created",
  };
};

export const mulmoScriptAgentInfo: AgentFunctionInfo = {
  name: "mulmoScriptAgent",
  agent: mulmoScriptAgent,
  mock: mulmoScriptAgent,
  samples: [],
  tools: [
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--addBeatToMulmoScript",
        description: "add beat to mulmo script.",
        parameters: {
          type: "object",
          properties: {
            beat: {
              type: "object",
              properties: {
                text: { type: "string", description: "talk script for each beat" },
                speaker: { type: "string", description: "speaker" },
              },
              required: ["text"],
            },
          },
          required: ["beat"],
        },
      },
    },
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--insertAtBeatToMulmoScript",
        description: "insert beat to mulmo script.",
        parameters: {
          type: "object",
          properties: {
            index: { type: "number", description: "position index of beats array" },
            beat: {
              type: "object",
              properties: {
                text: { type: "string", description: "talk script for each beat" },
                speaker: { type: "string", description: "speaker" },
              },
              required: ["text"],
            },
          },
          required: ["beat", "index"],
        },
      },
    },
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--updateBeatOnMulmoScript",
        description: "update beat on mulmo script.",
        parameters: {
          type: "object",
          properties: {
            index: { type: "number", description: "index of beats array" },
            beat: {
              type: "object",
              properties: {
                text: { type: "string", description: "talk script for each beat" },
                speaker: { type: "string", description: "speaker" },
                imagePrompt: {
                  type: "string",
                  description: "prompt to generate image. It is exclusive to the image object element in this object.",
                },
              },
              required: [],
            },
          },
          required: ["beat", "index"],
        },
      },
    },
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--replaceBeatOnMulmoScript",
        description: "update beat on mulmo script.",
        parameters: {
          type: "object",
          properties: {
            index: { type: "number", description: "index of beats array" },
            beat: {
              type: "object",
              properties: {
                text: { type: "string", description: "talk script for each beat" },
                speaker: { type: "string", description: "speaker" },
                imagePrompt: {
                  type: "string",
                  description: "prompt to generate image. It is exclusive to the image object element in this object.",
                },
              },
              required: [],
            },
          },
          required: ["beat", "index"],
        },
      },
    },
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--deleteBeatOnMulmoScript",
        description: "delete beat from mulmo script.",
        parameters: {
          type: "object",
          properties: {
            index: { type: "number", description: "position index of beats array" },
          },
          required: ["index"],
        },
      },
    },
    {
      type: "function",
      function: {
        name: "mulmoScriptAgent--setImagePromptOnBeat",
        description: "set image prompt on beat. Generated by looking at the text and the surrounding beats",
        parameters: {
          type: "object",
          properties: {
            index: { type: "number", description: "index of beats array" },
            imagePrompt: { type: "string", description: "image prompt" },
          },
          required: ["index", "imagePrompt"],
        },
      },
    },
  ],
  description: "generate mulmo script json data from prompt messages",
  category: ["net"],
  author: "Receptron team",
  repository: "https://github.com/receptron/mulmocast-app",
  license: "MIT",
};

export default mulmoScriptAgentInfo;
